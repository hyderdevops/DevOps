ip adderess,subnet,cidr range,osi model

How our mobile device connect to a website like google.com over the internet, how does the traffic flow from my device to website and how this website receives req and send response back to us 
Networking fundamentals are very important to understand organization infrastrucutre or the application function
IP Address:-
ip address is used to generate a unique address to a device connected to your network 
ipv4 standard is 4 bytes 
1 byte is equal to 8 bits
example of my ip address is 192.168.135.215 
1 byte          2nd byte      3rd byte      4th byte
---------     | --------    | --------    | --------   total 32bits
2^7,2^6,2^5,2^4,2^3,2^2,2^1,2^0
128, 64, 32, 16, 8,  4,  2,   1
11000000  |  10101000   | 10000111   |  11000111
 192             168         135            215
------------------------------------------------------------------------------------
Subnets:-
dividing a network into parts is called subnet, advantage of subnet is to get security, privacy and proper isolation.
2 subnets 1)private(dont have access to internet) 2)public (access to internet)
internet-->aws---->route tables---->igw---->acess to internet
cidr 
172.158.3.5/16 means 32-16= 16 ----> 2^16 ---->256*256=65536 this is the number of ip address of cidr

----------------------------------------------------------------------------------------
Ports:-
whenever we provide ip adderess to connet to website we provide ports like :80,:443,:8080
to bind an application we use port with ipaddress, using port we can distinguish the request has to go to which application.
---------------------------------------------------------------------------------------
OSI MODEL:-
http, tcp, L1-L7
different components and diff layers involves in send request and getting response over the internet--->means transfer of data 
OSI Model is one of the popular model which helps u to understand the journey of data across the internet via different layers in L7 layers to L1 layers
before we understand the journey of data, even before your browser initiates a request to the google server 2 things happens even before osi model comes into picture
1)DNS Resolution:- browser always check that the for ex:- www.google.com(8.8.8.8) is mapped to any paticular ip address, first check it in the local cache if its not available 
in the local cache the goes to the internet provider ISP for ip mapping, if this ip address is validated then moved to 2nd step tcp handshake.
2)Tcp Handshake:- If client is ready to send request and the server is also ready to accept then the handshake is done if the server denies then the handshake is not done.
its called 3 way hand shake 1)client say hi (synk) to server 2)server reply saying hi (synk ack) 3)client say ack

if dns resolution and tcp handshake is done then only data request initiation starts 


